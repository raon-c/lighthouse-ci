name: Run lighthouse ci When Push
on: [push]
jobs:
  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 17.3.1
        uses: actions/setup-node@v1
        with:
          node-version: 17.3.1
      - name: npm install, build
        run: |
          npm ci
          npm run build
      - name: run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          npm install -g @lhci/cli
          lhci autorun
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.TOKEN}}
          script: |
            const results = require('./lhci_reports/manifest.json')

            let comments = ""

            results.forEach(result => {
              const summary = result.summary;
              const url = result.url;
              const formatResult = (res) => Math.round((res * 100))
              Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
              const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
              const comment = [
                  `‚ö°Ô∏è [Lighthouse report](${url}) for the changes in this PR:`,
                  '| Category | Score |',
                  '| --- | --- |',
                  `| ${score(result.performance)} Performance | ${result.performance} |`,
                  `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                  `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                  `| ${score(result.seo)} SEO | ${result.seo} |`,
                  `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                  ' ',
              ].join('\n')
              comments += comment + '\n'
            })
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comments
            });
