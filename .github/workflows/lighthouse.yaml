name: Run lighthouse ci When Push
on: pull_request
jobs:
  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 17.3.1
        uses: actions/setup-node@v1
        with:
          node-version: 17.3.1
      - name: npm install, build
        run: |
          npm ci
          npm run build
      - name: run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          npm install -g @lhci/cli
          lhci autorun
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.TOKEN}}
          script: |
            const fs = require('fs');

            const results = JSON.parse(fs.readFileSync("/home/runner/work/lighthouse-ci/lighthouse-ci/lhci_reports/manifest.json"));

            let comments = "";

            results.forEach((result) => {
              const { summary, url, jsonPath } = result;
              const s = JSON.parse(fs.readFileSync(jsonPath));
              console.log(s)
              const formatResult = (res) => Math.round(res * 100);
              Object.keys(summary).forEach(
                (key) => (summary[key] = formatResult(summary[key]))
              );
              const score = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");
              const comment = [
                `‚ö°Ô∏è Lighthouse report! ${url} score in this PR:`,
                "| Category | Score |",
                "| --- | --- |",
                `| ${score(summary.performance)} Performance | ${summary.performance} |`,
                `| ${score(summary.accessibility)} Accessibility | ${
                  summary.accessibility
                } |`,
                `| ${score(summary["best-practices"])} Best practices | ${
                  summary["best-practices"]
                } |`,
                `| ${score(summary.seo)} SEO | ${summary.seo} |`,
                `| ${score(summary.pwa)} PWA | ${summary.pwa} |`,
                " ",
              ].join("\n");
              comments += comment + "\n";
            });
            core.setOutput('comments', comments)
      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          msg: ${{ steps.format_lighthouse_score.outputs.comments}}
          check_for_duplicate_msg: false # OPTIONAL
          delete_prev_regex_msg: "[0-9]" # OPTIONAL
          duplicate_msg_pattern: "[A-Z]" # OPTIONAL
